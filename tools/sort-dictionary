#!/bin/sh
# Keep the dictionary file sorted
#
########################################################################
# Copyright (c) 2020,2021,2023 Hans Ulrich Niedermann <hun@n-dimensional.de>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
########################################################################

sort_file() {
  local orig="$1"
  local sorted="$1.$$-new"

  env LC_ALL=C sort < "$orig" | uniq > "$sorted"

  if cmp "$orig" "$sorted"
  then # original file is already sorted
    echo "Already sorted and unique: $orig"
    rm -f "$sorted"
  else # update the file with the sorted version
    echo "Updating file sorting (unique): $orig"
    mv -f "$sorted" "$orig"
  fi
}

set -e
cd "$(dirname "$0")/.."

for file
do
  sort_file "$file"
done
